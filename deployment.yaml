apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-plugin
  namespace: cc-backend
spec:
  replicas: 0
  selector:
    matchLabels:
      app: demo-plugin
  template:
    metadata:
      labels:
        app: demo-plugin
    spec:
      imagePullSecrets:
      - name: pipeline-docker-registry
      containers:
      - name: demo-plugin
        image: ${CICD_IMAGE}:${CICD_EXECUTION_SEQUENCE}
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
        readinessProbe:
          httpGet:
            path: /height
            port: 5000
          successThreshold: 3
          failureThreshold: 3
          periodSeconds: 2
          timeoutSeconds: 2
        livenessProbe:
          httpGet:
            path: /height
            port: 5000
          failureThreshold: 3
          periodSeconds: 5
          timeoutSeconds: 2
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: demo-plugin
  namespace: cc-backend
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://status.core.cloudchainsinc.com"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  rules:
  - host: demo-plugin.core.cloudchainsinc.com
    http:
      paths:
      - backend:
          serviceName: demo-plugin
          servicePort: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: demo-plugin
  namespace: cc-backend
  labels:
    app: demo-plugin
spec:
  ports:
  - protocol: TCP
    port: 5000
    targetPort: 5000
  selector:
    app: demo-plugin
